<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>restassuredDemo</artifactId>
    <version>1.0-SNAPSHOT</version>


    <!--    <dependencies>-->

<!--        <dependency>-->
<!--            <groupId>io.rest-assured</groupId>-->
<!--            <artifactId>rest-assured</artifactId>-->
<!--            <version>4.0.0</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.testng</groupId>-->
<!--            <artifactId>testng</artifactId>-->
<!--            <version>7.1.0</version>-->
<!--            <scope>compile</scope>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>org.hamcrest</groupId>-->
<!--            <artifactId>java-hamcrest</artifactId>-->
<!--            <version>2.0.0.0</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->



<!--    </dependencies>-->
<!--<build>-->
<!--    <sourceDirectory>src</sourceDirectory>-->
<!--    <plugins>-->

<!--        <plugin>-->
<!--            <artifactId>maven-compiler-plugin</artifactId>-->
<!--            <version>3.8.1</version>-->
<!--            <configuration>-->
<!--                <source>1.8</source>-->
<!--                <target>1.8</target>-->
<!--                <encoding>UTF-8</encoding>-->
<!--            </configuration>-->
<!--        </plugin>-->


<!--        <plugin>-->
<!--            <artifactId>maven-surefire-plugin</artifactId>-->
<!--            <version>3.0.0-M5</version>-->
<!--            <configuration>-->
<!--                <suiteXmlFiles>-->
<!--                    <suiteXmlFile>testng.xml</suiteXmlFile>-->
<!--                </suiteXmlFiles>-->
<!--            </configuration>-->
<!--        </plugin>-->


<!--    </plugins>-->
<!--        </build>-->
    <!-- 属性配置 -->
    <properties>
        <!-- 指定编码方式和 JDK 8 -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 依赖版本信息 -->
        <lombok.version>1.18.4</lombok.version>
        <junit5.version>5.7.0-M1</junit5.version>
        <slf4j.version>1.7.25</slf4j.version>
        <log4j.version>2.11.1</log4j.version>
        <restassured.version>4.2.0</restassured.version>
        <testng.version>6.14.3</testng.version>
        <httpclient.version>4.5.9</httpclient.version>
        <gson.version>2.8.5</gson.version>
        <allure.version>2.13.5</allure.version>
        <compile-plugin.version>3.8.1</compile-plugin.version>
        <surefire-plugin.version>2.22.1</surefire-plugin.version>
        <aspectj.version>1.8.10</aspectj.version>
         jenkins 参数化构建
        <!--suppress UnresolvedMavenProperty -->
        <xml.file>${env.xmlFileName}</xml.file>
        <!--suppress UnresolvedMavenProperty -->
        <param1>${env.param1}</param1>
        <!--suppress UnresolvedMavenProperty -->
        <param2>${env.param2}</param2>
        <!--suppress UnresolvedMavenProperty -->
        <param3>${env.param3}</param3>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit5.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- log4j -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!-- rest-assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restassured.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${restassured.version}</version>
        </dependency>
        <!-- testng -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>
        <!-- httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>
        <!-- gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <!-- allure 2 -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <version>${allure.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 编译插件 compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compile-plugin.version}</version>
                <configuration>
                    <!-- 使用jdk 1.8的版本来编译 -->
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!-- 测试插件 surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <!-- allure 2 配置 -->
                    <argLine>
                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <!-- 指定 xml 文件 -->
                    <suiteXmlFiles>
                        <!-- 通过美元符的形式可以将 jenkins 中参数传递过来，指定要运行的 xml 名 -->
                        <!-- <suiteXmlFile>${xml.file}</suiteXmlFile> -->
                        <suiteXmlFile>testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <!-- 传入 xml 中 -->
                    <systemPropertyVariables>
                        <!-- jenkins 参数一 -->
                        <param1>${param1}</param1>
                        <!-- jenkins 参数二 -->
                        <param2>${param2}</param2>
                        <!-- jenkins 参数三 -->
                        <param3>${param3}</param3>
                    </systemPropertyVariables>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
                <dependencies>
                    <!-- allure 2 配置依赖 -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>


</project>